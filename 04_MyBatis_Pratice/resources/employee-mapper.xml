<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="employeeMapper">

	<select id="findAll" resultType="employee">
		SELECT
		       E.EMP_ID empId
		     , E.EMP_NAME empName
		     , E.SALARY
		     , D.DEPT_TITLE deptTitle
		     , J.JOB_NAME jobName
		 FROM
		       EMPLOYEE E
		 LEFT     
		 JOIN
		       DEPARTMENT D ON (E.DEPT_CODE = D.DEPT_ID)
		 JOIN  
			   JOB J USING (JOB_CODE)
		ORDER
		   BY
		       E.EMP_ID DESC
	</select>
	
	<select id="findByDmtEmployee" parameterType="String" resultType="employee">
		SELECT	
			   E.EMP_ID empId
		     , E.EMP_NAME empName
		     , D.DEPT_TITLE deptTitle
		     , E.SALARY
		  FROM
		       EMPLOYEE E
		  JOIN
		       DEPARTMENT D ON (E.DEPT_CODE = D.DEPT_ID)
		 WHERE 
		       D.DEPT_TITLE = #{deptTitle}
		 ORDER
		    BY
		       E.EMP_ID DESC
	</select>
	
	<select id="findByJobEmployee" parameterType="String" resultType="employee">
		SELECT
			   JOB_CODE jobCode
		     , E.EMP_NAME empName
			 , J.JOB_NAME jobName
		  FROM
		       EMPLOYEE E
		  JOIN
		       JOB J USING (JOB_CODE)
		 WHERE 
		       J.JOB_NAME = #{jobName}
		ORDER
		   BY 
		       JOB_CODE DESC
	</select>
	
	<select id="findAllDetail" parameterType="_int" resultType="employee">
		SELECT
			   EMP_ID empId
			 , EMP_NAME	empName
			 , EMP_NO empNo
			 , EMAIL
			 , PHONE
			 , DEPT_CODE deptCode
			 , JOB_CODE jobCOde
			 , SAL_LEVEL salLevel
			 , SALARY
			 , BONUS
			 , MANAGER_ID managerId
			 , HIRE_DATE hireDate
			 , ENT_DATE	entDate
			 , ENT_YN entYn
		  FROM 
		       EMPLOYEE
		 WHERE
		 	   EMP_ID = #{empId}
	</select>
	
	<select id="getHighSalaryEmployees" resultType="employee">
		SELECT
		       EMP_NAME	empName
		     , SALARY
		  FROM
		       EMPLOYEE
		 WHERE
			   SALARY IS NOT NULL
		 ORDER
		    BY
		       SALARY DESC
		OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY
	</select>
	
	<select id="getLowSalaryEmployees" resultType="employee">
		SELECT
		       EMP_NAME	empName
		     , SALARY
		  FROM
		       EMPLOYEE
		 WHERE
			   SALARY IS NOT NULL
		 ORDER
		    BY
		       SALARY
		OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY
	</select>
	
	<insert id="save" parameterType="employee">
		INSERT
		  INTO
		  	   EMPLOYEE
		       (
		       EMP_ID
		     , EMP_NAME
		     , EMP_NO
		     , EMAIL
		     , PHONE
		     , JOB_CODE
		     , SAL_LEVEL
		     , SALARY
		       )
		VALUES
		 	   (
			   SEQ_EID.NEXTVAL
			 , #{empName}
			 , #{empNo}
			 , #{email}
			 , #{phone}
			 , #{jobCode}
			 , #{salLevel}
			 , #{salary}
		 	   )
	</insert>
	
	 <update id="update" parameterType="employeedto">
		UPDATE
		       EMPLOYEE E
		   SET
		       SALARY    = #{newSalary}
		     , JOB_CODE  = (
		               SELECT
		                        J.JOB_CODE
		                 FROM
		                        JOB J
		                WHERE
		                        J.JOB_NAME = #{newJobName}
		           )
	         , DEPT_CODE = (
	               SELECT
	                        D.DEPT_ID
	                 FROM
	                        DEPARTMENT D
	                WHERE
	                        D.DEPT_TITLE = #{newDeptTitle}
	           )
		 WHERE
		       E.EMP_ID  = #{empId}
	</update>
	
	<update id="delete" parameterType="String">
		UPDATE
		       EMPLOYEE
		   SET
		       ENT_YN ='Y'
		 WHERE
		       EMP_ID = #{empId}
	</update>
</mapper>